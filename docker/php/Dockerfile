FROM php:8.2-fpm-alpine

# Copy php config
COPY conf/php.ini /usr/local/etc/php/php.ini

RUN apk update

# Packages
RUN apk add --no-cache curl git build-base zlib-dev oniguruma-dev autoconf icu-dev bash
RUN apk update && rm -rf /var/cache/apk/*

# Postgres
#RUN apk add --no-cache libpq-dev \
#    && docker-php-ext-install pdo_pgsql
RUN set -ex \
  && apk --no-cache add \
    postgresql-dev

RUN docker-php-ext-install pdo pdo_pgsql

# Intl
RUN docker-php-ext-configure intl \
    && docker-php-ext-install intl

# XDebug
ARG INSTALL_XDEBUG=false
RUN if [ ${INSTALL_XDEBUG} = true ]; \
  then \
    apk add --no-cache linux-headers  \
    && apk add --update --no-cache --virtual .build-dependencies $PHPIZE_DEPS \
    && pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && pecl clear-cache \
    && apk del .build-dependencies; \
fi;

# Xdebug config
COPY conf/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

# Non root user
ARG PUID=1000
ARG PGID=1000
RUN apk --no-cache add shadow && \
    groupmod -o -g ${PGID} www-data && \
    usermod -o -u ${PUID} -g www-data www-data

# Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Symfony CLI
RUN curl -sS https://get.symfony.com/cli/installer | bash
RUN mv /root/.symfony5/bin/symfony /usr/local/bin/symfony

# Git config
RUN git config --global user.email "leonardo_007@inbox.ru" \
    && git config --global user.name "honnek"

# Set user
USER www-data

# Files
COPY ./ /var/www/app
WORKDIR /var/www/app

# Run php-fpm
CMD php-fpm

# Expose port
EXPOSE 9000